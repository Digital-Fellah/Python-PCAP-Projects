# Morse Code Translator
# This program translates text input into Morse code and vice versa.

# Dictionary for mapping characters to Morse code and vice versa
morse_code_dict = {
    'A': '.-', 'B': '-...', 'C': '-.-.', 'D': '-..', 'E': '.', 'F': '..-.', 'G': '--.',
    'H': '....', 'I': '..', 'J': '.---', 'K': '-.-', 'L': '.-..', 'M': '--', 'N': '-.',
    'O': '---', 'P': '.--.', 'Q': '--.-', 'R': '.-.', 'S': '...', 'T': '-', 'U': '..-',
    'V': '...-', 'W': '.--', 'X': '-..-', 'Y': '-.--', 'Z': '--..',
    '1': '.----', '2': '..---', '3': '...--', '4': '....-', '5': '.....',
    '6': '-....', '7': '--...', '8': '---..', '9': '----.', '0': '-----',
    '.': '.-.-.-', ',': '--..--', '?': '..--..', "'": '.----.', '!': '-.-.--',
    '/': '-..-.', '(': '-.--.', ')': '-.--.-', '&': '.-...', ':': '---...',
    ';': '-.-.-.', '=': '-...-', '+': '.-.-.', '-': '-....-', '_': '..--.-',
    '"': '.-..-.', '$': '...-..-', '@': '.--.-.'
}

# Function to translate text to Morse code
def text_to_morse(text):
    morse_code = []
    for char in text.upper():  # Convert text to uppercase for uniformity
        if char in morse_code_dict:
            morse_code.append(morse_code_dict[char])
        else:
            morse_code.append(' ')  # Use space for unknown characters
    return ' '.join(morse_code)

# Function to translate Morse code to text
def morse_to_text(morse_code):
    text = []
    morse_code_words = morse_code.split(' ')  # Split Morse code by spaces to get words
    for word in morse_code_words:
        for key, value in morse_code_dict.items():
            if value == word:
                text.append(key)
                break
        else:
            text.append(' ')  # Use space if Morse code sequence is unknown
    return ''.join(text)

# Example usage:
input_text = input("Enter text or Morse code to translate: ")

if input_text[0] in '-.':
    translated_text = morse_to_text(input_text)
    print(f"Morse code '{input_text}' translates to: {translated_text}")
else:
    translated_text = text_to_morse(input_text)
    print(f"Text '{input_text}' translates to Morse code: {translated_text}")


"""
EXPLANATION OF THE CODE

The program starts with a dictionary morse_code_dict that maps characters and digits to their respective Morse code representations, using both dots (.) and dashes (-).
Two functions, text_to_morse and morse_to_text, are defined to translate text to Morse code and vice versa.
text_to_morse iterates through each character of the input text, converts it to uppercase, checks if it exists in morse_code_dict, and appends the corresponding Morse code to morse_code.
morse_to_text splits the input Morse code by spaces to handle individual words, iterates through the dictionary to find matching Morse code sequences, and appends the corresponding characters to text.
Example usage prompts the user to enter either text or Morse code, determines the type of input based on the first character (- or .), and prints the translated result accordingly.
"""


"""
NOTIONS COVERED

Dictionary usage for character mapping (morse_code_dict).
Indexing and slicing (input_text[0] to determine input type).
Iterating through strings (for char in text and for word in morse_code_words).
.split() method for separating Morse code by spaces.
.join() method to concatenate Morse code sequences or text.
"""
