# Password Strength Checker
# This program evaluates the strength of a password based on certain criteria.

def password_strength(password):
    # Initialize strength variable to 0
    strength = 0
    
    # Check length of password
    if len(password) >= 8:
        strength += 1  # Increment strength if password length is 8 or more
    
    # Check if password contains both letters and numbers
    if any(char.isalpha() for char in password) and any(char.isdigit() for char in password):
        strength += 1  # Increment strength if password contains letters and numbers
    
    # Check if password contains both lowercase and uppercase letters
    if any(char.islower() for char in password) and any(char.isupper() for char in password):
        strength += 1  # Increment strength if password contains lowercase and uppercase letters
    
    # Determine password strength level based on the total strength points
    if strength == 0:
        return "Weak password"
    elif strength == 1:
        return "Moderate password"
    elif strength == 2:
        return "Strong password"
    elif strength == 3:
        return "Very strong password"

# Example usage:
password = input("Enter a password: ")
strength_level = password_strength(password)
print(f"Password strength: {strength_level}")


"""
EXPLANATION OF THE CODE

Define a function password_strength that takes a password as input.
Initialize a strength variable to keep track of the password's strength level.
Check the length of the password; if it's 8 characters or more, increase the strength by 1.
Check if the password contains both letters and numbers using .isalpha() and .isdigit() methods; increase strength if true.
Check if the password contains both lowercase and uppercase letters; increase strength if true.
Return a strength level based on the accumulated strength points: "Weak password" (0 points), "Moderate password" (1 point), "Strong password" (2 points), "Very strong password" (3 points).
Example usage: Prompt the user to enter a password, evaluate its strength using password_strength function, and print the strength level.
"""


"""
NOTIONS COVERED

.isalpha(), .isdigit(), .islower(), .isupper() methods to check character types.
.join() method to concatenate messages based on password strength.
Comparing strings and numbers to determine password complexity.
Functions (def) and function calling (password_strength(password)).
"""
